name: Bump and Release

on:
  push:
    branches:
      - master

jobs:
  bump-version:
    if: "!startsWith(github.event.head_commit.message, 'ðŸ”– release:')"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    name: "Bump with commitizen and create release"
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set push flag
        id: set_push_flag
        run: |
          echo "PUSH_FLAG=$(if [ '${{ github.ref }}' == 'refs/heads/master' ]; then echo 'true'; else echo 'false'; fi)" >> $GITHUB_ENV

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_user_signingkey: true
          git_config_global: true

      - name: Create bump and changelog
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          changelog_increment_filename: body.md
          git_name: atiasn
          git_email: ritboylei@gmail.com
          push: ${{ env.PUSH_FLAG }}
          gpg_sign: false
          merge: true
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Delete bump commit message
        run: |
          sed -i '/ðŸ”– release:/,$d' body.md
          cat body.md

      - name: Get tag
        id: tag
        run: |
          LATEST_TAG=$(git tag --sort=-creatordate | head -1)
          echo "Latest tag is $LATEST_TAG"
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: "body.md"
          tag_name: ${{ steps.tag.outputs.tag }}
          skipIfReleaseExists: true
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
